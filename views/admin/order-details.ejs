




<%- include("../../views/partials/admin/header") %>

<style>
  .content {
    padding: 30px;
    background-color: #f8f9fa;
  }

  .page-title {
    color: var(--dark);
    font-size: 1.75rem;
    margin-bottom: 25px;
    font-weight: 600;
  }

  .order-card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    margin-bottom: 25px;
    padding: 20px;
  }

  .section-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 2px solid #f8f9fa;
  }

  .status-badge {
    padding: 8px 16px;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .status-pending { background-color: #ffeeba; color: #856404; }
  .status-processing { background-color: #b8daff; color: #004085; }
  .status-shipped { background-color: #c3e6cb; color: #155724; }
  .status-delivered { background-color: #d4edda; color: #155724; }
  .status-cancelled { background-color: #f8d7da; color: #721c24; }

  .info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
  }

  .info-item {
    padding: 15px;
    background: #f8f9fa;
    border-radius: 8px;
  }

  .info-label {
    font-size: 0.875rem;
    color: #6c757d;
    margin-bottom: 5px;
  }

  .info-value {
    font-size: 1rem;
    font-weight: 500;
  }

  .product-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 4px;
  }

  .timeline {
    position: relative;
    padding: 20px 0;
  }

  .timeline-item {
    padding-left: 30px;
    position: relative;
    padding-bottom: 20px;
  }

  .timeline-item::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #dee2e6;
  }

  .timeline-item::after {
    content: '';
    position: absolute;
    left: -4px;
    top: 0;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: var(--primary);
  }
  .status-approved { background-color: #c3e6cb; color: #155724; }
  .status-rejected { background-color: #f8d7da; color: #721c24; }
  .status-completed { background-color: #d4edda; color: #155724; }
</style>

<div class="content">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h3 class="page-title">Order Details - #<%= order.orderId %></h3>
    <a href="/admin/orders" class="btn btn-outline-primary">
      <i class="fas fa-arrow-left"></i> Back to Orders
    </a>
  </div>

  <!-- Order Summary Card -->
  <div class="order-card">
    <div class="section-title">Order Summary</div>
    <div class="info-grid">
      <div class="info-item">
        <div class="info-label">Order Date</div>
        <div class="info-value"><%= new Date(order.createdOn).toLocaleDateString() %></div>
      </div>
      <div class="info-item">
        <div class="info-label">Status</div>
        <div class="info-value">
          <span class="status-badge status-<%= order.status?.toLowerCase() %>">
            <%= order.status %>
          </span>
        </div>
      </div>
      <div class="info-item">
        <div class="info-label">Payment Method</div>
        <div class="info-value"><%= order.paymentMethod %></div>
      </div>
      <div class="info-item">
        <div class="info-label">Total Amount</div>
        <div class="info-value">₹<%= order.finalAmount?.toLocaleString() %></div>
      </div>
    </div>
  </div>

  <!-- Customer Details Card -->
  <div class="order-card">
    <div class="section-title">Customer Information</div>
    <div class="row">
      <div class="col-md-6">
        <div class="info-item">
          <div class="info-label">Customer Name</div>
          <div class="info-value"><%= order.userDetails?.name || 'N/A' %></div>
          <div class="info-label mt-2">Email</div>
          <div class="info-value"><%= order.userDetails?.email || 'N/A' %></div>
          <div class="info-label mt-2">Phone</div>
          <div class="info-value"><%= order.userDetails?.phone || 'N/A' %></div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="info-item">
          <div class="info-label">Shipping Address</div>
          <div class="info-value">
            <%= order.addressDetails?.name || 'N/A' %><br>
            <%= order.addressDetails?.address || '' %><br>
            <%= order.addressDetails?.city || '' %>, 
            <%= order.addressDetails?.state || '' %> - 
            <%= order.addressDetails?.pincode || '' %><br>
            Phone: <%= order.addressDetails?.mobile || '' %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Order Items Card -->
  <div class="order-card">
    <div class="section-title">Order Items</div>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>Product</th>
            <th>Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
          </tr>
        </thead>
        <tbody>
          <% order.orderItems.forEach(item => { %>
          <tr>
            <td>
              <% if (item.productDetails?.productImages?.[0]) { %>
                <img src="/uploads/re-image/<%= item.productDetails.productImages[0] %>" 
                     alt="Product Image" 
                     class="product-image">
              <% } %>
            </td>
            <td><%= item.productDetails?.productName || 'N/A' %></td>
            <td>₹<%= item.price?.toLocaleString() || 0 %></td>
            <td><%= item.quantity %></td>
            <td>₹<%= (item.price * item.quantity)?.toLocaleString() || 0 %></td>
          </tr>
          <% }) %>
        </tbody>
        <tfoot>
          <tr>
            <td colspan="4" class="text-end"><strong>Subtotal:</strong></td>
            <td>₹<%= order.totalPrice?.toLocaleString() || 0 %></td>
          </tr>
          <tr>
            <td colspan="4" class="text-end"><strong>Discount:</strong></td>
            <td>₹<%= order.discount?.toLocaleString() || 0 %></td>
          </tr>
          <tr>
            <td colspan="4" class="text-end"><strong>Final Amount:</strong></td>
            <td>₹<%= order.finalAmount?.toLocaleString() || 0 %></td>
          </tr>
        </tfoot>
      </table>
    </div>
  </div>

  <!-- Order Timeline Card -->
  <div class="order-card">
    <div class="section-title">Order Timeline</div>
    <div class="timeline">
      <% const statusOrder = ['pending', 'processing', 'shipped', 'Delivered']; %>
      <% statusOrder.forEach(status => { %>
        <div class="timeline-item">
          <div class="info-value"><%= status.charAt(0).toUpperCase() + status.slice(1) %></div>
          <div class="info-label">
            <% if (status === order.status) { %>
              Current Status
            <% } else if (statusOrder.indexOf(status) < statusOrder.indexOf(order.status)) { %>
              Completed
            <% } else { %>
              Pending
            <% } %>
          </div>
        </div>
      <% }) %>
    </div>
  </div>

  <!-- Action Buttons -->
  <div class="order-card">
    <div class="d-flex gap-3">
      <button onclick="updateStatus('<%= order.orderId %>')" class="btn btn-primary">
        <i class="fas fa-sync-alt"></i> Update Status
      </button>
      
      <% if (['pending', 'processing'].includes(order.status)) { %>
        <button onclick="cancelOrder('<%= order.orderId %>')" class="btn btn-danger">
          <i class="fas fa-times"></i> Cancel Order
        </button>
      <% } %>
    </div>
  </div>

  <!-- Return Request Card -->
<% if (order.return?.isRequested) { %>
  <div class="order-card">
    <div class="section-title">Return Request</div>
    <div class="info-grid">
      <div class="info-item">
        <div class="info-label">Request Date</div>
        <div class="info-value"><%= new Date(order.return.requestDate).toLocaleDateString() %></div>
      </div>
      <div class="info-item">
        <div class="info-label">Status</div>
        <div class="info-value">
          <span class="status-badge status-<%= order.return.status?.toLowerCase() %>">
            <%= order.return.status %>
          </span>
        </div>
      </div>
      <div class="info-item">
        <div class="info-label">Reason</div>
        <div class="info-value"><%= order.return.reason %></div>
      </div>
    </div>
    
    <div class="mt-4">
      <button onclick="updateReturnStatus('<%= order.orderId %>')" class="btn btn-primary">
        <i class="fas fa-sync-alt"></i> Update Return Status
      </button>
    </div>
  </div>
  <% } %>
</div>

<script>
async function updateStatus(orderId) {
  const { value: status } = await Swal.fire({
    title: 'Update Order Status',
    input: 'select',
    inputOptions: {
      'pending': 'Pending',
      'processing': 'Processing',
      'shipped': 'Shipped',
      'Delivered': 'Delivered',
      'Cancelled': 'Cancelled'
    },
    inputPlaceholder: 'Select status',
    showCancelButton: true
  });

  if (status) {
    try {
      const response = await fetch('/admin/order/update-status', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ orderId, status })
      });

      const data = await response.json();
      
      if (data.status) {
        Swal.fire('Success', 'Order status updated successfully', 'success')
          .then(() => location.reload());
      } else {
        Swal.fire('Error', data.message || 'Failed to update status', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire('Error', 'An error occurred while updating status', 'error');
    }
  }
}

async function cancelOrder(orderId) {
  const result = await Swal.fire({
    title: 'Cancel Order',
    text: 'Are you sure you want to cancel this order?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, cancel it',
    cancelButtonText: 'No, keep it'
  });

  if (result.isConfirmed) {
    try {
      const response = await fetch('/admin/order/cancel', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ orderId })
      });

      const data = await response.json();
      
      if (data.status) {
        Swal.fire('Cancelled', 'Order has been cancelled', 'success')
          .then(() => location.reload());
      } else {
        Swal.fire('Error', data.message || 'Failed to cancel order', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire('Error', 'An error occurred while cancelling order', 'error');
    }
  }
}

async function updateReturnStatus(orderId) {
  const { value: status } = await Swal.fire({
    title: 'Update Return Status',
    input: 'select',
    inputOptions: {
      'pending': 'Pending',
      'approved': 'Approved',
      'rejected': 'Rejected',
      'completed': 'Completed'
    },
    inputPlaceholder: 'Select status',
    showCancelButton: true
  });

  if (status) {
    try {
      const response = await fetch('/admin/order/update-return-status', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ orderId, status })
      });

      const data = await response.json();
      
      if (data.status) {
        Swal.fire('Success', 'Return status updated successfully', 'success')
          .then(() => location.reload());
      } else {
        Swal.fire('Error', data.message || 'Failed to update return status', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire('Error', 'An error occurred while updating return status', 'error');
    }
  }
}
</script>

<%- include("../../views/partials/admin/footer") %>