



<%- include("../../views/partials/user/header") %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

<style>
/* Match the home page color scheme and styling */
:root {
  --primary-color: #f7444e;
  --secondary-color: #002c3e;
  --text-color: #002c3e;
  --background-light: #f8f9fa;
}

.main {
  font-family: 'Poppins', sans-serif;
  color: var(--text-color);
  background-color: var(--background-light);
}

.dashboard-menu {
  background-color: white;
  border-radius: 15px;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
  padding: 20px;
  margin-bottom: 30px;
}

.dashboard-menu .nav-link {
  color: var(--text-color);
  padding: 12px 20px;
  margin: 5px 0;
  border-radius: 8px;
  transition: all 0.3s ease;
  font-weight: 500;
}

.dashboard-menu .nav-link:hover,
.dashboard-menu .nav-link.active {
  background-color: var(--primary-color);
  color: white;
}

.card {
  border: none;
  border-radius: 15px;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
  margin-bottom: 30px;
  overflow: hidden;
}

.card-header {
  background-color: var(--secondary-color);
  color: white;
  padding: 20px;
  border: none;
}

.card-body {
  padding: 30px;
}

.btn-success {
  background-color: var(--primary-color);
  border: none;
  padding: 10px 25px;
  border-radius: 5px;
  transition: all 0.3s ease;
}

.btn-success:hover {
  background-color: #d63a42;
  transform: translateY(-2px);
}

/* Dashboard Menu Icon Styles */
.dashboard-menu .nav-link {
    display: flex;
    align-items: center;
    padding: 12px 20px;
    color: #333;
    transition: all 0.3s ease;
    border-radius: 8px;
    margin-bottom: 5px;
}

.dashboard-menu .nav-link i {
    width: 20px;
    margin-right: 10px;
    text-align: center;
    font-size: 16px;
}

.dashboard-menu .nav-link:hover,
.dashboard-menu .nav-link.active {
    background: #f7444e;
    color: white;
    transform: translateY(-2px);
}

/* Table styling */
.table {
  border-collapse: separate;
  border-spacing: 0 10px;
}

.table thead th {
  border: none;
  background-color: #f8f9fa;
  padding: 15px;
  font-weight: 600;
}

.table tbody td {
  padding: 15px;
  vertical-align: middle;
  background-color: white;
  border: none;
}

/* Profile card specific styling */
.card-green {
  background-color: white;
}

.profile-image {
  width: 120px;
  height: 120px;
  border-radius: 60px;
  margin: 0 auto 20px;
  border: 5px solid var(--primary-color);
}

/* Wallet section styling */
.wallet-amount {
  font-size: 2.5rem;
  color: var(--primary-color);
  font-weight: bold;
  margin: 20px 0;
}

/* Address section styling */
.address-card {
  height: 100%;
  transition: all 0.3s ease;
}

.address-card:hover {
  transform: translateY(-5px);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .dashboard-menu {
    margin-bottom: 20px;
  }
  
  .card-body {
    padding: 20px;
  }
  
  .wallet-amount {
    font-size: 2rem;
  }
}

/*remove from top*/

.profile-banner {
  border-radius: 15px 15px 0 0;
}

.profile-picture-wrapper {
  position: absolute;
  left: 50%;
  bottom: -50px;
  transform: translateX(-50%);
}

.profile-picture {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: #fff;
  border: 4px solid #fff;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  display: flex;
  align-items: center;
  justify-content: center;
}

.profile-name {
  color: #333;
  font-size: 1.5rem;
  font-weight: 600;
  padding-top: 7px;
}

.profile-details {
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-top: 1rem;
}

.detail-item {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  color: #666;
}

.detail-item i {
  color: #f7444e;
}

.profile-actions {
  display: flex;
  gap: 15px;
  justify-content: center;
  margin-top: 2rem;
}

.btn-edit-profile, .btn-change-email {
  padding: 8px 20px;
  border-radius: 8px;
  border: none;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  gap: 8px;
  transition: all 0.3s ease;
  text-decoration: none;
}

.btn-edit-profile {
  background-color: #f7444e;
  color: white;
}

.btn-change-email {
  background-color: #f8f9fa;
  color: #333;
  border: 1px solid #dee2e6;
}

.btn-edit-profile:hover {
  background-color: #e43a43;
  color: white;
}

.btn-change-email:hover {
  background-color: #e9ecef;
  color: #333;
}

@media (max-width: 576px) {
  .profile-actions {
    flex-direction: column;
  }
  
  .btn-edit-profile, .btn-change-email {
    width: 100%;
    justify-content: center;
  }
}

.address-card {
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 15px rgba(0,0,0,0.05);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  height: 100%;
}

.address-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 5px 20px rgba(0,0,0,0.1);
}

.address-header {
  padding: 16px 20px;
  border-bottom: 1px solid #eee;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.address-type {
  background: #f7444e;
  color: white;
  padding: 4px 12px;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 500;
  text-transform: capitalize;
}

.address-actions {
  display: flex;
  gap: 10px;
}

.action-btn {
  width: 32px;
  height: 32px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #666;
  transition: all 0.3s ease;
}

.action-btn.edit {
  background: #e8f4ff;
  color: #0084ff;
}

.action-btn.delete {
  background: #fff1f1;
  color: #f7444e;
}

.action-btn:hover {
  transform: scale(1.1);
}

.address-body {
  padding: 20px;
}

.recipient-info {
  margin-bottom: 15px;
}

.recipient-info .name {
  margin-bottom: 10px;
  color: #333;
  font-weight: 600;
}

.contact {
  display: flex;
  flex-direction: column;
  gap: 5px;
  color: #666;
  font-size: 0.9rem;
}

.address-details {
  color: #666;
  font-size: 0.95rem;
}

.address-details .location {
  margin-bottom: 5px;
}

.address-details .region {
  color: #888;
}

/* Add New Address Card Styles */
.new-address {
  border: 2px dashed #ddd;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #f8f9fa;
}

.add-address-content {
  text-align: center;
  padding: 30px 20px;
}

.add-icon {
  font-size: 2.5rem;
  color: #f7444e;
  margin-bottom: 15px;
}

.btn-add-address {
  display: inline-block;
  margin-top: 15px;
  padding: 8px 24px;
  background: #f7444e;
  color: white;
  border-radius: 8px;
  text-decoration: none;
  transition: background-color 0.3s ease;
}

.btn-add-address:hover {
  background: #e43a43;
  color: white;
}

@media (max-width: 768px) {
  .address-card {
    margin-bottom: 20px;
  }
  
  .contact {
    flex-direction: row;
    gap: 15px;
  }
}
</style>

<main class="main">
  <!-- breadcrumb section -->
<section class="breadcrumb_section">
  <div class="container">
     <div class="row">
        <div class="col-12">
           <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                 <li class="breadcrumb-item"><a href="/">Home</a></li>
                 <li class="breadcrumb-item active" aria-current="page">profile</li>
              </ol>
           </nav>
        </div>
     </div>
  </div>
</section>
<!-- end breadcrumb section -->

  <section class="pt-5 pb-5">
    <div class="container">
      <div class="row">
        <div class="col-lg-10 m-auto">
          <div class="row">
            <!-- Left sidebar -->
            <div class="col-md-4">
              <div class="dashboard-menu">
                <ul class="nav flex-column" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" aria-controls="dashboard" aria-selected="true">
                            <i class="fas fa-tachometer-alt"></i> Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="false">
                            <i class="fas fa-map-marker-alt"></i> My Address
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false">
                            <i class="fas fa-shopping-bag"></i> Orders
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="wallet-tab" data-bs-toggle="tab" href="#track-orders" role="tab" aria-controls="track-orders" aria-selected="false">
                            <i class="fas fa-wallet"></i> Wallet Status
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="history-tab" data-bs-toggle="tab" href="#wallet-history" role="tab" aria-controls="wallet-history" aria-selected="false">
                            <i class="fas fa-history"></i> Wallet History
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="referral-tab" data-bs-toggle="tab" href="#referal" role="tab" aria-controls="referal" aria-selected="false">
                            <i class="fas fa-user-friends"></i> Referrals
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/logout">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </a>
                    </li>
                </ul>
            </div>
          </div>

            <!-- Right content area -->
            <div class="col-md-8">
              <div class="tab-content dashboard-content">
                <!-- Dashboard tab -->
                <div class="tab-pane fade show active" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
                  <div class="card">
                    <div class="card-body p-0">
                      <!-- Profile Header Banner -->
                      <div class="position-relative">
                        <div class="profile-banner" style="height: 140px; background: linear-gradient(to right, #f7444e, #e43a43);"></div>
                        <div class="profile-picture-wrapper">
                          <div class="profile-picture">
                            <i class="fas fa-user fa-2x text-gray-400"></i>
                          </div>
                        </div>
                      </div>
                
                      <!-- Profile Info -->
                      <div class="profile-info text-center pt-5  x-4" style="padding-bottom:5.5rem;">
                        <h3 class="profile-name mb-3"><%=user.name%></h3>
                        
                        <div class="profile-details">
                          <div class="detail-item">
                            <i class="fas fa-envelope text-primary"></i>
                            <span><%=user.email%></span>
                          </div>
                          <div class="detail-item">
                            <i class="fas fa-phone text-primary"></i>
                            <span><%=user.phone%></span>
                          </div>
                        </div>
                
                        <div class="profile-actions mt-4">
                          <button onclick="openEditModal()" class="btn-edit-profile">
                            <i class="fas fa-edit me-2"></i>Edit Profile
                          </button>
                          <a href="/change-email" class="btn-change-email">
                            <i class="fas fa-envelope me-2"></i>Change Email
                          </a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Your address content -->
                <div class="tab-pane fade" id="address">
                  <div class="row g-4">
                    <!-- Existing Addresses -->
                    <% if(userAddress) { %>
                      <% userAddress.address.forEach((address) => { %>
                        <div class="col-lg-6">
                          <div class="address-card">
                            <div class="address-header">
                              <span class="address-type"><%= address.addressType %></span>
                              <div class="address-actions">
                                <a href="/editAddress?id=<%= address._id %>" class="action-btn edit">
                                  <i class="fas fa-edit"></i>
                                </a>
                                <a href="/deleteAddress?id=<%= address._id %>" class="action-btn delete" 
                                   onclick="return confirm('Are you sure you want to delete this address?')">
                                  <i class="fas fa-trash"></i>
                                </a>
                              </div>
                            </div>
                            <div class="address-body">
                              <div class="recipient-info">
                                <h5 class="name"><%= address.name %></h5>
                                <div class="contact">
                                  <span><i class="fas fa-phone me-2"></i><%= address.phone %></span>
                                  <% if(address.altPhone) { %>
                                    <span><i class="fas fa-phone-alt me-2"></i><%= address.altPhone %></span>
                                  <% } %>
                                </div>
                              </div>
                              <div class="address-details">
                                <p class="location">
                                  <i class="fas fa-map-marker-alt me-2"></i>
                                  <%= address.landMark %>, <%= address.city %>
                                </p>
                                <p class="region"><%= address.state %> - <%= address.pincode %></p>
                              </div>
                            </div>
                          </div>
                        </div>
                      <% }) %>
                    <% } %>
                
                    <!-- Add New Address Card -->
                    <div class="col-lg-6">
                      <div class="address-card new-address">
                        <div class="add-address-content">
                          <div class="add-icon">
                            <i class="fas fa-plus-circle"></i>
                          </div>
                          <h5>Add New Address</h5>
                          <p>Add a new delivery address</p>
                          <a href="/addAddress" class="btn-add-address">
                            Add Address
                          </a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Wallet Status Tab -->
                <div class="tab-pane fade" id="track-orders">
                  <div class="card">
                    <div class="card-header">
                      <h5 class="mb-0">Wallet Balance</h5>
                    </div>
                    <div class="card-body text-center">
                      <div class="wallet-amount">
                        ₹<%= wallet.balance %> 
                      </div>
                      <p class="mb-4">Available Balance</p>
                      <button type="button" class="btn btn-success" onclick="addMoney()">
                        <i class="fas fa-plus-circle me-2"></i>Add Money
                      </button>
                    </div>
                  </div>
                </div>

                <!-- Wallet History Tab -->
                <div class="tab-pane fade" id="wallet-history">
                  <div class="card">
                    <div class="card-header">
                      <h5 class="mb-0">Transaction History</h5>
                    </div>
                    <div class="card-body">
                      <div class="table-responsive">
                        <table class="table">
                          <thead>
                            <tr>
                              <th>Date</th>
                              <th>Transaction ID</th>
                              <th>Type</th>
                              <th>Amount</th>
                              <th>Status</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% if (wallet.transactions && wallet.transactions.length > 0) { %>
                              <% wallet.transactions.forEach(transaction => { %>
                                <tr>
                                  <td><%= new Date(transaction.createdAt).toLocaleDateString() %></td>
                                  <td><%= transaction.transactionId %></td>
                                  <td><%= transaction.type %></td>
                                  <td>₹<%= transaction.amount %></td>
                                  <td>
                                    <span class="badge <%= transaction.status === 'completed' ? 'bg-success' : (transaction.status === 'pending' ? 'bg-warning' : 'bg-danger') %>">
                                      <%= transaction.status %>
                                    </span>
                                  </td>
                                </tr>
                              <% }) %>
                            <% } else { %>
                              <tr>
                                <td colspan="5" class="text-center">No transactions found</td>
                              </tr>
                            <% } %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Referral Tab -->
                <div class="tab-pane fade" id="referal">
                  <div class="card">
                    <div class="card-header">
                      <h5 class="mb-0">Refer & Earn</h5>
                    </div>
                    <div class="card-body">
                      <div class="text-center mb-4">
                        <i class="fas fa-gift fa-3x text-primary mb-3"></i>
                        <h4>Invite Friends & Earn Rewards</h4>
                        <p class="text-muted">Refer your friends and earn ₹100 when they sign up!</p>
                      </div>
                      <div class="referral-link-box p-3 bg-light rounded mb-4">
                        <p class="mb-2">Your Referral Link:</p>
                        <div class="input-group">
                          <input type="text" class="form-control" value="<%= user.referralCode %>" id="referralLink" readonly>
                          <button class="btn btn-success" onclick="copyReferralLink()">
                            <i class="fas fa-copy"></i> Copy
                          </button>
                        </div>
                      </div>
                      <div class="row text-center">
                        <div class="col-md-6 mb-3">
                          <div class="card">
                            <div class="card-body">
                              <h3 class="text-primary">₹<%= totalReferralEarnings %></h3>
                              <p class="mb-0">Total Earned</p>
                            </div>
                          </div>
                        </div>
                        <div class="col-md-6 mb-3">
                          <div class="card">
                            <div class="card-body">
                              <h3 class="text-success"><%= referredUsers.length %></h3>
                              <p class="mb-0">Successful Referrals</p>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="mt-4">
                        <h5>Referred Users</h5>
                        <ul class="list-group">
                          <% referredUsers.forEach(function(referredUser) { %>
                            <li class="list-group-item">
                              Name: <%= referredUser.name %> - Email: <%= referredUser.email %>
                            </li>
                          <% }); %>
                        </ul>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Orders tab -->
                <div class="tab-pane fade" id="orders">
                  <div class="card">
                    <div class="card-header">
                      <h5 class="mb-0">Your Orders</h5>
                    </div>
                    <div class="card-body">
                      <div class="table-responsive">
                        <table class="table">
                          <thead>
                            <tr>
                              <th>Order ID</th>
                              <th>Products</th>
                              <th>Date</th>
                              <th>Status</th>
                              <th>Total</th>
                              <th>Payment</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% 
                            // Group orders by orderId
                            const groupedOrders = {};
                            orderData.forEach(order => {
                              if (!groupedOrders[order.orderId]) {
                                groupedOrders[order.orderId] = {
                                  orderId: order.orderId,
                                  invoiceDate: order.invoiceDate,
                                  status: order.status,
                                  finalAmount: 0,
                                  products: [],
                                  _id: order._id,
                                  isPaid: order.isPaid,
                                  paymentStatus: order.paymentStatus // Assuming you have this field in your order data
                                };
                              }
                              groupedOrders[order.orderId].products.push(order.productDetails);
                              groupedOrders[order.orderId].finalAmount = order.finalAmount;
                            });
                            %>
                            <% Object.values(groupedOrders).forEach(order => { %>
                              <tr>
                                <td><%= order.orderId.slice(-6) %></td>
                                <td>
                                  <div class="d-flex gap-2">
                                    <% order.products.forEach(product => { %>
                                      <a href="/order/<%= order._id %>">
                                        <img src="/uploads/re-image/<%= product.productImages[0] %>" 
                                             alt="Product Image" 
                                             style="width: 50px; height: auto;"
                                             data-bs-toggle="tooltip" 
                                             title="<%= product.name %>">
                                      </a>
                                    <% }) %>
                                  </div>
                                </td>
                                <td><%= new Date(order.invoiceDate).toLocaleDateString() %></td>
                                <td><%= order.status %></td>
                                <td>₹<%= order.finalAmount %></td>
                                <td>
                                  <% if (order.isPaid || order.status === 'delivered') { %>
                                    <span class="text-success">Paid</span>
                                  <% } else if (order.status === 'cancelled') { %>
                                    <span class="text-danger">Failed</span>
                                  <% } else { %>
                                    <button class="btn btn-primary btn-sm" onclick="retryPayment('<%= order._id %>', '<%= order.finalAmount %>')">Payment</button>
                                  <% } %>
                                </td>
                              </tr>
                            <% }) %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>
               
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>
<div id="editProfileModal" class="modal fade" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header border-0 position-relative">
        <h5 class="modal-title">Edit Profile</h5>
        <button type="button" class="btn-close position-absolute" style="top: 1rem; right: 1rem; border: none; background-color: var(--primary-color); color: white; border-radius: 5px;" data-bs-dismiss="modal">X</button>
      </div>
      <div class="modal-body">
        <form id="editProfileForm" action="/update-profile" method="PUT">
          <div class="mb-4">
            <label class="form-label">Name</label>
            <input type="text" name="name" id="name" class="form-control" value="<%=user.name%>">
          </div>
          <div class="mb-4">
            <label class="form-label">Phone</label>
            <input type="tel" name="phone" id="phone" class="form-control" value="<%=user.phone%>">
          </div>
          <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-success">Save Changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  const editModal = new bootstrap.Modal(document.getElementById('editProfileModal'));
const openEditModal = () => editModal.show();

document.getElementById('editProfileForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const formData = new FormData(e.target);
  console.log(Object.fromEntries(formData));
  console.log(formData)
  try {
    const response = await fetch('http://localhost:3000/update-profile', {
      method: 'PUT',
      headers:{
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(Object.fromEntries(formData)
    ) 
    });
    
    if (response.ok) {
      editModal.hide();
      
    } else {
      
      const errorData = await response.json();
      console.error('Error:', errorData);
    }
  } catch (error) {
    console.error('Network Error:', error);
  }
});

  </script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  function retryPayment(orderId, amount) {
    fetch('/create-razorpay-order', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ amount, currency: 'INR' })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const options = {
          key: data.key,
          amount: data.order.amount,
          currency: data.order.currency,
          order_id: data.order.id,
          name: 'Your Store Name',
          description: 'Payment for your order',
          handler: function (response) {
            fetch('/verify-payment', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                razorpay_order_id: response.razorpay_order_id,
                razorpay_payment_id: response.razorpay_payment_id,
                razorpay_signature: response.razorpay_signature,
                orderId: orderId
              })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Payment Successful!',
                  confirmButtonColor: '#f7444e'
                }).then(() => {
                  location.reload();
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Payment Verification Failed',
                  text: data.message,
                  confirmButtonColor: '#f7444e'
                });
              }
            })
            .catch(error => {
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong while verifying the payment!',
                confirmButtonColor: '#f7444e'
              });
            });
          },
          prefill: {
            name: 'Customer Name',
            email: 'customer@example.com',
            contact: '9999999999'
          },
          theme: {
            color: '#F37254'
          }
        };

        const rzp = new Razorpay(options);
        rzp.open();
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Order Creation Failed',
          text: data.message,
          confirmButtonColor: '#f7444e'
        });
      }
    })
    .catch(error => {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Something went wrong!',
        confirmButtonColor: '#f7444e'
      });
    });
  }


  function copyReferralLink() {
  // Get the referral link input element
  const referralLinkInput = document.getElementById('referralLink');
  
  // Select the text inside the input
  referralLinkInput.select();
  referralLinkInput.setSelectionRange(0, 99999); // For mobile devices

  // Copy the selected text to the clipboard
  document.execCommand('copy');

  // Show SweetAlert confirmation
  Swal.fire({
    icon: 'success',
    title: 'Copied!',
    text: 'Referral link copied to clipboard.',
    confirmButtonColor: '#f7444e',
    timer: 1500 // Auto-close after 1.5 seconds
  });
}
</script>
  

  

<%- include("../../views/partials/user/footer") %>